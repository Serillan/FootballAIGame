@model FootballAIGameWeb.ViewModels.Home.PlayerHomeViewModel
@{
    ViewBag.Title = "Home Page";
}



<div class="form-horizontal"> @* for correct vertical alignment of Name label *@
    <div class="container col-sm-3 text-center table-responsive" style="margin-top: 2em">
        <h3>Active AIs</h3>
        <table id="ai-table" class="table table-hover" style="border: 2px solid white">
            <thead><tr><th class="text-center">Select AI to play with.</th></tr></thead>
            <tbody id="aiTableBody">
                @foreach (var ai in Model.ActiveAIs)
                {
                    if (ai == Model.Player.SelectedAi)
                    {
                        <tr class="selectable-row success" data-selected><td>@ai</td></tr>
                    }
                    else
                    {
                        <tr class="selectable-row"><td>@ai</td></tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="container col-sm-5 text-center" style="margin-top: 2em; text-align: center">
        <h3>Score: @Model.Player.Score</h3>
        <button id="random" type="submit" class="btn btn-primary" style="white-space: normal; margin: 1em; margin-top: 4em">Match against random opponent</button>
    </div>

    <div class="container col-sm-4 text-center table-responsive" style="margin-top: 2em">
        <!-- old offset = 4 -->
        <h3>Last Matches</h3>
        <table class="table table-hover">
            <thead>
                <tr>
                    <th class="text-center">Result</th>
                    <th class="text-center">AI</th>
                    <th class="text-center">Opponent</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var match in Model.LastMatches)
                {
                    var playerNumber = match.Player1 == Model.Player ? 1 : 2;
                    var playerAi = playerNumber == 1 ? match.Player1Ai : match.Player2Ai;
                    var otherPlayer = playerNumber == 1 ? match.Player2 : match.Player1;

                    if (match.Winner == 0) // draw
                    {
                        <tr class="clickable-row" data-href="/matches/details/@match.Id">
                            <td>Draw</td>
                            <td>@playerAi</td>
                            <td>@otherPlayer.Name</td>
                        </tr>

                    }
                    else if (match.Winner == playerNumber)
                    {
                        <tr class="success clickable-row" data-href="/matches/details/@match.Id">
                            <td>Win</td>
                            <td>@playerAi</td>
                            <td>@otherPlayer.Name</td>
                        </tr>
                    }
                    else
                    {
                        <tr class="danger clickable-row" data-href="/matches/details/@match.Id">
                            <td>Loose</td>
                            <td>@playerAi</td>
                            <td>@otherPlayer.Name</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="container col-sm-12" style="margin-top: 2em">
        <div class="container col-sm-3 text-center table-responsive">
            <h3>Challenges</h3>
            <table style="margin: 0 auto" class="table-hover">
                <tbody id="challengesTableBody">
                    @foreach (var player in Model.Challenges)
                    {
                        <tr>
                            <td id="name">@player.Name</td>
                            <td><button class="btn btn-link accept-challenge" data-value="@player.Name">Accept</button></td>
                            <td><button type="button" class="btn btn-link decline-challenge" data-value="@player.Name">Decline</button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="container col-sm-5" style="text-align: center">

            <button autofocus id="challenge" type="submit" class="btn btn-default" style="margin: 1em auto">Challenge Player</button>

            <div class="form-group text-center col-sm-12" style="margin: 0 auto">
                @Html.LabelFor(m => m.OpponentPlayerName, new { @class = "col-sm-1 col-sm-offset-2 control-label", style = "margin-right: 1em" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(m => m.OpponentPlayerName, new { @class = "form-control", style = "margin: 0 auto; max-width: 15em" })
                    <span class="field-validation-valid text-danger" data-valmsg-for="OpponentPlayerName"></span>
                </div>
            </div>

            <div class="container text-center col-sm-12" style="margin-top: 4em">
                <a href="/tournaments/" class="btn btn-default">Tournaments</a>
            </div>

        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document)
            .ready(function () {

                $("#game-form")
                    .submit(function (e) {
                        e.preventDefault();
                    });

                var aiMustBeSelected = function () {
                    if ($("table#ai-table tr.selectable-row[data-selected]").length === 0) {
                        $("table#ai-table").css("border", "2px solid red");
                        if ($("table#ai-table tr.selectable-row").length === 0) {
                            toastr.error("You need to have an active AI.");
                            return false;
                        } else {
                            toastr.error("AI must be selected.");
                            return false;
                        }
                    } else {
                        return true;
                    }
                };

                var aiTableClickHandler = function () {
                    $("table#ai-table").css("border", "2px solid white");
                    var nextValue = $(this).find("td").first().text();

                    $("#SelectedAi").attr("value", nextValue);

                    $.ajax({
                        url: "/api/game/toggleai/" + nextValue,
                        method: "put"
                    });

                };

                $("#random")
                    .on("click",
                        function () {
                            $("span[data-valmsg-for='OpponentPlayerName']").text("");
                            $("#btn").prop("disabled", true);
                            if (aiMustBeSelected()) {
                                $.ajax({
                                    url: "/api/game/startrandommatch",
                                    method: "post",
                                    success: function () {
                                        location.replace("/");
                                    },
                                    error: function (xhr, status, error) {
                                        var json = JSON.parse(xhr.responseText);
                                        toastr.error(json.message);
                                        $("#btn").prop("disabled", false);
                                    }
                                });
                            }
                        });

                var processChallenge = function () {
                    var opponentName;
                    if ($(this).is("#challenge"))
                        opponentName = $("#OpponentPlayerName").val();
                    else
                        opponentName = $(this).attr("data-value");

                    if (opponentName === undefined || opponentName === "") {
                        $("span[data-valmsg-for='OpponentPlayerName']").text("This field is required.");
                        return;
                    }

                    if (aiMustBeSelected()) {
                        $.ajax({
                            url: "/api/game/challengeplayer/" + opponentName,
                            method: "post",
                            success: function () {
                                location.replace("/");
                            },
                            error: function (xhr, status, error) {
                                var json = JSON.parse(xhr.responseText);
                                toastr.error(json.message);
                            }
                        });
                    }
                }

                var declineChallenge = function () {
                    var button = $(this);
                    toastr.success("Challenge declined.");
                    button.closest("tr").remove();

                    $.ajax({
                        url: "/api/game/decline/" + $(this).attr("data-value"),
                        type: "DELETE"
                    });
                };


                $("#OpponentPlayerName")
                    .keypress(function (event) {
                        if (event.keyCode === 13) {
                            $("#challenge").click();
                            // stops handling other events on enter! (otherwise primary submit button would be handled)
                        }
                    });

                $("#OpponentPlayerName")
                    .on("input",
                        function () {
                            $("span[data-valmsg-for='OpponentPlayerName']").text("");
                        });

                @* works for dynamically created elements as well *@
                @* mousedown instread of click, because while mouse is *@
                @* being pressed, the control might change and the event won't fire *@
                $(document).on("click", "#challenge", processChallenge);
                $(document).on("mousedown", ".accept-challenge", processChallenge);
                $(document).on("mousedown", ".decline-challenge", declineChallenge);
                $(document).on("mousedown", "table#ai-table tr.selectable-row", aiTableClickHandler);

                // challenges polling
                var ajaxCallx = function () {
                    $.ajax({
                        url: "/api/game/getchallengersnames",
                        success: function (response) {
                            var newTableBody = "";
                            for (var i = 0; i < response.length; i++) {
                                newTableBody = newTableBody +
                                    '<tr><td id="name">' +
                                    response[i] +
                                    '</td>' +
                                    '<td><button class="btn btn-link accept-challenge" data-value="' +
                                    response[i] +
                                    '">Accept</button></td>' +
                                    '<td><button type="button" class="btn btn-link decline-challenge" data-value="' +
                                    response[i] +
                                    '">Decline</button></td></tr>';
                            }

                            $("#challengesTableBody").html(newTableBody);
                            //$(".accept-challenge").on("click", processChallenge);
                            //$(".decline-challenge").on("click", declineChallenge);
                        }
                    });
                    $.ajax({
                        url: "/api/game/getactiveais",
                        success: function (response) {
                            var newTableBody = "";
                            var selectedAi = $("tr[data-selected]>td").text();
                            for (var i = 0; i < response.length; i++) {
                                if (response[i] === selectedAi) {
                                    newTableBody = newTableBody +
                                        '<tr class="selectable-row" data-selected><td>' +
                                        response[i] +
                                        '</td></tr>';
                                } else {
                                    newTableBody = newTableBody +
                                        '<tr class="selectable-row"><td>' +
                                        response[i] +
                                        '</td></tr>';
                                }
                            }

                            $("#aiTableBody").html(newTableBody);
                            $(".selectable-row[data-selected]").addClass("success");
                            // add click handle
                            //$(".selectable-row").click(selectableRowClickHandle);
                        }
                    });
                };
                setInterval(ajaxCallx, 3000);
            });

    </script>
}
