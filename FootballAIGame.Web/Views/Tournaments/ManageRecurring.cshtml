@using System.Web.Http.Routing
@using FootballAIGame.DbModel.Models
@model IEnumerable<RecurringTournament>
@{
    ViewBag.Title = "Recurring Tournaments";
}

<h2 class="text-center">
    Recurring Tournaments
</h2>

<div style="margin-bottom: 2em">
    @Html.ActionLink("New Recurring Tournament", "CreateRecurring", "Tournaments", null, new {@class = "btn btn-success"})
    @Html.ActionLink("Current Tournaments", "Current", "Tournaments", null, new {@class = "btn btn-default"})
</div>


<table id="match-table" class="table table-responsive table-hover">
    <thead>
        <tr>
            <th>First Start Time</th>
            <th>Name</th>
            <th>Recurrence Interval (minutes)</th>
            <th>Number of Present Tournaments</th>
            <th>Minimum Number of Players</th>
            <th>Maximum Number of Players</th>
            <th>Admin Action</th>
        </tr>
    </thead>
    @foreach (var recTournament in Model)
    {
        <tr>
            <td>@recTournament.StartTime</td>
            <td>@recTournament.Name</td>
            <td>@recTournament.RecurrenceInterval</td>
            <td>@recTournament.NumberOfPresentTournaments</td>
            <td>@recTournament.MinimumNumberOfPlayers</td>
            <td>@recTournament.MaximumNumberOfPlayers</td>
            <td class="text-center"><a class="delete" data-tournament-id="@recTournament.Id" role="button">Delete</a></td>
        </tr>
    }
</table>

@section scripts {
    <script>
        $(document).ready(function() {
            
            $(".delete").on("click", function () {
                var row = $(this).closest("tr");
                var tournamentId = $(this).attr("data-tournament-id");

                bootbox.confirm({
                    message: "Do you want to delete all unstarted tournaments from this recurring tournament?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        $.ajax({
                            url: "@Url.Action("DeleteRecurringTournament", "Tournaments", new {HttpRoute="Api"})/" + tournamentId + "/" + result,
                            method: "delete",
                            success: function () {
                                toastr.success("The recurring tournament was deleted.");
                                row.remove();
                            },
                            error: function (xhr) {
                                var json = JSON.parse(xhr.responseText);
                                toastr.error(json.message);
                            }
                        });
                    }
                });
            });

            $("#match-table").DataTable({
                "order": [[0, "asc"]] // oldest first (the first that will start)
            });
        });
    </script>
}
