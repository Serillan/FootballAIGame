@using FootballAIGame.DbModel.Models
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@model IEnumerable<Player>
@{
    ViewBag.Title = "Players";
}

<h2 class="text-center">
    Players
</h2>

<div style="margin-bottom: 2em">
    <h4>Note</h4>
    If you change other player permission, he needs to relog for changes to take effect.
</div>

<table id="match-table" class="table table-responsive table-hover">
    <thead>
        <tr>
            <th>Name</th>
            <th>Score</th>
            <th>Won games</th>
            <th>Won tournaments</th>
            <th>Tournament Admin</th>
            <th>Details</th>
        </tr>
    </thead>
    @{
        var context = new ApplicationDbContext();
        var userStore = new UserStore<User>(context);
        var userManager = new UserManager<User>(userStore);
    }


    @foreach (var player in Model)
    {
        <tr>
            <td>@player.Name</td>
            <td>@player.Score</td>
            <td>@player.WonGames</td>
            <td>@player.WonTournaments</td>
            <td>
                @{
                    var check = userManager.IsInRole(player.UserId, RolesNames.TournamentAdmin) ? "checked" : "";
                    <div class="checkbox">
                        <input @check class="tournament-admin" data-user-id="@player.UserId" type="checkbox" value="" />
                    </div>
                }
            </td>
            <td>@Html.ActionLink("Details", "Details", new { Controller = "Players", id = player.Name })</td>
        </tr>
    }
</table>

<input type="hidden" id="refresh" value="no">


@section scripts {
    <script>


        $(document)
            .ready(function () {

                var $input = $('#refresh');
                $input.val() === 'yes' ? location.reload(true) : $input.val('yes');

                $("#match-table")
                .DataTable({
                 "order": [[1, "desc"]]
                });


                $("input.tournament-admin")
                    .change(function () {
                        var userId = $(this).attr("data-user-id");
                        var input = $(this);

                        $.ajax({
                            url: "@Url.Action("ToggleRole", "User", new {HttpRoute="Api"})/" + userId + "/@RolesNames.TournamentAdmin",
                            method: "put",
                            error: function (xhr, status, error) {
                                if (error !== "Bad Request") {
                                    toastr.error(error + " error.");
                                } else {
                                    var json = JSON.parse(xhr.responseText);
                                    toastr.error(json.message);
                                }

                                // rollback
                                if (input.prop("checked"))
                                    input.prop("checked", false);
                                else
                                    input.prop("checked", true);
                            }
                        });
                    });


            });
    </script>
}
